{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API for Execode code learning environment",
        "title": "Execode API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/": {
            "get": {
                "description": "get the status of server.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Show the status of server.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.healthCheck.response"
                        }
                    }
                }
            }
        },
        "/execute": {
            "post": {
                "description": "Execute the code in the language specified in the POST request body.\nIf it is a submission task then save user submissions as well.",
                "consumes": [
                    "application/json",
                    "text/xml"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Execute"
                ],
                "summary": "Execute code and handle user submissions.",
                "parameters": [
                    {
                        "description": "Description of the job to be run",
                        "name": "JobDescription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExecutionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Describes the result of the execution",
                        "schema": {
                            "$ref": "#/definitions/ExecutionResults"
                        }
                    }
                }
            }
        },
        "/execute/runtimes": {
            "get": {
                "description": "Get all available language runtimes provided by the connected piston instance",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Execute"
                ],
                "summary": "List installed Piston runtimes.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PistonRuntimeList"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Gets all users, set page size and page number through query parameters.\nDefaults to page size = 10 and page = 1",
                "tags": [
                    "Users"
                ],
                "summary": "Gets all users (paged)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page size to return",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Describes the result of the execution",
                        "schema": {
                            "$ref": "#/definitions/UsersList"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates the user defined by the request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Creates the user defined by the request",
                "parameters": [
                    {
                        "description": "Description of the user to created",
                        "name": "UserDescription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Describes the created user",
                        "schema": {
                            "$ref": "#/definitions/CreateUserResult"
                        }
                    }
                }
            }
        },
        "/users/{username}": {
            "get": {
                "description": "Gets all users, set page size and page number through query parameters.\nDefaults to page size = 10 and page = 1",
                "tags": [
                    "Users"
                ],
                "summary": "Gets all users (paged)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username to query",
                        "name": "username",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Describes the result of the execution",
                        "schema": {
                            "$ref": "#/definitions/UserResult"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ClassFields": {
            "type": "object",
            "properties": {
                "classDescription": {
                    "type": "string"
                },
                "className": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserFields"
                    }
                }
            }
        },
        "CreateUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "CreateUserResult": {
            "type": "object",
            "properties": {
                "result": {
                    "$ref": "#/definitions/UserBasic"
                }
            }
        },
        "ExecutionInput": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "stdin": {
                    "type": "string"
                }
            }
        },
        "ExecutionRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExecutionInput"
                    }
                },
                "language": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "ExecutionResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "output": {
                    "type": "string"
                },
                "signal": {
                    "type": "string"
                },
                "stderr": {
                    "type": "string"
                },
                "stdout": {
                    "type": "string"
                }
            }
        },
        "ExecutionResults": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/PistonError"
                    }
                },
                "run": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExecutionResult"
                    }
                }
            }
        },
        "PistonError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "PistonRuntime": {
            "type": "object",
            "properties": {
                "aliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "language": {
                    "type": "string"
                },
                "node": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "PistonRuntimeList": {
            "type": "object",
            "properties": {
                "runtimes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PistonRuntime"
                    }
                }
            }
        },
        "UserAdvanced": {
            "type": "object",
            "properties": {
                "classes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ClassFields"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "UserBasic": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "UserFields": {
            "type": "object",
            "properties": {
                "class": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ClassFields"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastName": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "UserResult": {
            "type": "object",
            "properties": {
                "result": {
                    "$ref": "#/definitions/UserAdvanced"
                }
            }
        },
        "UsersList": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserBasic"
                    }
                }
            }
        },
        "main.healthCheck.response": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}