basePath: /
definitions:
  ClassBasic:
    properties:
      class_description:
        type: string
      class_name:
        type: string
      id:
        type: integer
    type: object
  ClassBasicNoRelation:
    properties:
      class_description:
        type: string
      class_name:
        type: string
      id:
        type: integer
    type: object
  ClassFields:
    properties:
      classDescription:
        type: string
      className:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      updatedAt:
        type: string
    type: object
  CreateUser:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      user_name:
        type: string
    type: object
  CreateUserResult:
    properties:
      result:
        $ref: '#/definitions/UserBasic'
    type: object
  ExecutionInput:
    properties:
      args:
        items:
          type: string
        type: array
      stdin:
        type: string
    type: object
  ExecutionRequest:
    properties:
      content:
        type: string
      inputs:
        items:
          $ref: '#/definitions/ExecutionInput'
        type: array
      language:
        type: string
      name:
        type: string
      version:
        type: string
    type: object
  ExecutionResult:
    properties:
      code:
        type: integer
      output:
        type: string
      signal:
        type: string
      stderr:
        type: string
      stdout:
        type: string
    type: object
  ExecutionResults:
    properties:
      errors:
        additionalProperties:
          $ref: '#/definitions/PistonError'
        type: object
      run:
        items:
          $ref: '#/definitions/ExecutionResult'
        type: array
    type: object
  PistonError:
    properties:
      message:
        type: string
      status_code:
        type: integer
    type: object
  PistonRuntime:
    properties:
      aliases:
        items:
          type: string
        type: array
      language:
        type: string
      node:
        type: string
      version:
        type: string
    type: object
  PistonRuntimeList:
    properties:
      runtimes:
        items:
          $ref: '#/definitions/PistonRuntime'
        type: array
    type: object
  UserAdvanced:
    properties:
      classes:
        items:
          $ref: '#/definitions/ClassBasicNoRelation'
        type: array
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      updated_at:
        type: string
      user_name:
        type: string
    type: object
  UserBasic:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      user_name:
        type: string
    type: object
  UsersList:
    properties:
      count:
        type: integer
      users:
        items:
          $ref: '#/definitions/UserBasic'
        type: array
    type: object
  api.CreateClassHandler.request:
    properties:
      class_description:
        type: string
      class_name:
        type: string
      lecturers:
        items:
          type: string
        type: array
    type: object
  api.CreateClassHandler.response:
    properties:
      result:
        $ref: '#/definitions/ClassBasic'
    type: object
  api.CreateLectureHandler.request:
    properties:
      class_id:
        type: integer
      lecture_content:
        type: string
      lecture_description:
        type: string
      lecture_name:
        type: string
    type: object
  api.CreateLectureHandler.response:
    properties:
      result:
        $ref: '#/definitions/entities.Lecture'
    type: object
  api.DeleteClassHandler.request:
    properties:
      class_id:
        type: integer
    type: object
  api.DeleteClassHandler.response:
    properties:
      status:
        type: string
    type: object
  api.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  api.GetClassesHandler.response:
    properties:
      classes:
        items:
          $ref: '#/definitions/ClassBasic'
        type: array
      count:
        type: integer
    type: object
  entities.Lecture:
    properties:
      class:
        $ref: '#/definitions/ClassFields'
      classID:
        type: integer
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      lectureContent:
        $ref: '#/definitions/entities.LectureContent'
      lectureDescription:
        type: string
      lectureName:
        type: string
      updatedAt:
        type: string
    type: object
  entities.LectureContent:
    properties:
      content:
        type: string
      lectureID:
        type: integer
    type: object
  main.healthCheck.response:
    properties:
      message:
        type: string
    type: object
  swaggercompat.Response:
    properties:
      result: {}
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for Execode code learning environment
  title: Execode API
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - '*/*'
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.healthCheck.response'
      summary: Show the status of server.
      tags:
      - Health
  /classes:
    delete:
      parameters:
      - description: ID of class to delete
        in: body
        name: ClassID
        required: true
        schema:
          $ref: '#/definitions/api.DeleteClassHandler.request'
      responses:
        "200":
          description: Describes the result of the execution
          schema:
            $ref: '#/definitions/api.DeleteClassHandler.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Delete class specified by class_id
      tags:
      - Classes
    get:
      description: Gets all classes, set page size and page number through query parameters.
      parameters:
      - default: 1
        description: Page size to return
        in: query
        name: offset
        type: integer
      - default: 10
        description: Page to return
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: Describes the result of the execution
          schema:
            $ref: '#/definitions/api.GetClassesHandler.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Gets all classes (paged)
      tags:
      - Classes
    post:
      consumes:
      - application/json
      description: Creates the class defined by the request, the classes will be lectured
        by the specified lecturers
      parameters:
      - description: Description of the class to created
        in: body
        name: ClassDescription
        required: true
        schema:
          $ref: '#/definitions/api.CreateClassHandler.request'
      produces:
      - application/json
      responses:
        "200":
          description: Describes the created class
          schema:
            $ref: '#/definitions/api.CreateClassHandler.response'
      summary: Creates the class defined by the request
      tags:
      - Classes
  /classes/{classID}:
    get:
      description: Gets all classes, set page size and page number through query parameters.
      parameters:
      - description: ID of class to return
        in: path
        name: classID
        type: integer
      responses:
        "200":
          description: Describes the result of the execution
          schema:
            $ref: '#/definitions/api.GetClassesHandler.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Gets all classes (paged)
      tags:
      - Classes
  /execute:
    post:
      consumes:
      - application/json
      - text/xml
      description: |-
        Execute the code in the language specified in the POST request body.
        If it is a submission task then save user submissions as well.
      parameters:
      - description: Description of the job to be run
        in: body
        name: JobDescription
        required: true
        schema:
          $ref: '#/definitions/ExecutionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Describes the result of the execution
          schema:
            $ref: '#/definitions/ExecutionResults'
      summary: Execute code and handle user submissions.
      tags:
      - Execute
  /execute/runtimes:
    get:
      consumes:
      - '*/*'
      description: Get all available language runtimes provided by the connected piston
        instance
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PistonRuntimeList'
      summary: List installed Piston runtimes.
      tags:
      - Execute
  /lectures:
    post:
      parameters:
      - description: Describes lecture to be created
        in: body
        name: LectureDescription
        required: true
        schema:
          $ref: '#/definitions/api.CreateLectureHandler.request'
      responses:
        "200":
          description: Describes lecture created
          schema:
            $ref: '#/definitions/api.CreateLectureHandler.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Create lecture for class specified by class_id
      tags:
      - Lectures
  /users:
    get:
      description: Gets all users, set page size and page number through query parameters.
      parameters:
      - default: 1
        description: Page size to return
        in: query
        name: offset
        type: integer
      - default: 10
        description: Page to return
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: Describes the result of the execution
          schema:
            $ref: '#/definitions/UsersList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Gets all users (paged)
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Creates the user defined by the request
      parameters:
      - description: Description of the user to created
        in: body
        name: UserDescription
        required: true
        schema:
          $ref: '#/definitions/CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: Describes the created user
          schema:
            $ref: '#/definitions/CreateUserResult'
      summary: Creates the user defined by the request
      tags:
      - Users
  /users/{username}:
    get:
      description: Queries only one user resulting from the specified username
      parameters:
      - description: Username to query
        in: path
        name: username
        type: string
      responses:
        "200":
          description: Describes the user entity
          schema:
            allOf:
            - $ref: '#/definitions/swaggercompat.Response'
            - properties:
                result:
                  $ref: '#/definitions/UserAdvanced'
              type: object
      summary: Gets single user defined by username parameter
      tags:
      - Users
schemes:
- http
swagger: "2.0"
